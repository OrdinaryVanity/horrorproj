Class MyFist : REWeapon
{
	Default
	{	
		Weapon.SelectionOrder 3700;
		Weapon.Kickback 100;
		AttackSound "fistpunch";
		Obituary "$OB_MPFIST";
		Tag "$TAG_FIST";
		DamageType "Hammer";
		+WEAPON.MELEEWEAPON;
		+WEAPON.NOALERT;
	}
	
	States
	{
		Ready:
			IDLE A 1 A_WeaponReady;
			Loop;
			
		Deselect:
			IDLE A 1 A_Lower;
			Loop;
		
		Select:
			IDLE A 1 A_Raise;
			Loop;
		
		Fire:
			TNT1 A 0 SetHUDVisibility(2.0);
			TNT1 A 0 A_JumpIfInventory("FistStamina", 25, "FastFire");
			UNLM A 0 A_TakeInventory("FistStamina", random(1,4));
			UNLM B 1 ;
			UNLM D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM C 1;
			UNLM D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM D 1;
			UNLM E 1;
			UNLM D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM F 1;
			UNLM D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM G 1 A_Quake(1,1,0,1);
			UNLM H 5 A_CustomPunch(random(1,4), TRUE, CPF_PULLIN, "BulletPuff", 64.0);
			UNLM IJ 3;
			UNLM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM K 3;
			UNLM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM L 3;
			UNLM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM M 3;
			UNLM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM N 3;
			IDLE A 6 A_WeaponReady(WRF_NOSWITCH);
			Goto Ready;
		
		FastFire:
			UNLM A 0 A_TakeInventory("FistStamina", random(4,8));
			UNLM B 0;
			UNLM C 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM C 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM C 0;
			UNLM D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM D 0;
			UNLM E 0;
			UNLM E 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM E 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM F 0;
			UNLM F 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNLM F 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNLM G 1 A_Quake(2,2,0,1);
			UNLM H 2 A_CustomPunch(random(4,9) * 2, TRUE, CPF_PULLIN, "BulletPuff", 64.0);
			UNLM H 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM H 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM I 1 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
			UNLM JK 1 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
			UNLM K 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM K 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM L 1 A_Refire("PreHold");
			UNLM L 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM L 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM M 1;
			UNLM M 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNLM M 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNLM N 1;
			IDLE A 6 A_WeaponReady(WRF_NOSWITCH);
			Goto Ready;
			
		AltFire:
			TNT1 A 0 SetHUDVisibility(2.0);
			TNT1 A 0 A_JumpIfInventory("FistStamina", 25, "AltFastFire");
			UNRM A 0 A_TakeInventory("FistStamina", random(3,8));
			UNRM B 1;
			UNRM B 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM B 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM C 1;
			UNRM C 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM C 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM D 1;
			UNRM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM E 1;
			UNRM E 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM E 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM F 1;
			UNRM F 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM F 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM G 1 A_Quake(2,2,0,1);
			UNRM H 5 A_CustomPunch(random(2,6), TRUE, CPF_PULLIN, "BulletPuff", 64.0);
			UNRM H 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM H 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM IJK 3 A_WeaponReady(WRF_NOSECONDARY | WRF_NOSWITCH);
			UNRM L 3 A_Refire("AltPreHold");
			UNRM L 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM L 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM M 3;
			UNRM M 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM M 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM N 3;
			UNRM N 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM N 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM O 3;
			UNRM O 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM O 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			IDLE A 6 A_WeaponReady(WRF_NOSWITCH);
			Goto Ready;
			
		AltFastFire:
			TNT1 A 0 SetHUDVisibility(2.0);
			UNRM A 0 A_TakeInventory("FistStamina", random(8,12));
			UNRM B 0;
			UNRM B 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM B 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM C 0;
			UNRM C 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM C 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM D 0;
			UNRM D 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM D 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM E 0;
			UNRM E 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM E 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM F 0;
			UNRM F 0 A_SetAngle(angle + 0.5, SPF_INTERPOLATE);
			UNRM F 0 A_SetPitch(pitch + 0.5, SPF_INTERPOLATE);
			UNRM G 0 A_Quake(6,4,0,1);
			UNRM H 3 A_CustomPunch(random(6,10) * 2, TRUE, CPF_PULLIN, "BulletPuff", 64.0);
			UNRM H 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM H 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM I 1;
			UNRM JK 1;
			UNRM L 2;
			UNRM L 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM L 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM M 2 A_WeaponReady(WRF_NOSECONDARY | WRF_NOSWITCH);
			UNRM M 1;
			UNRM M 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM M 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM N 2;
			UNRM N 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM N 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			UNRM O 2;
			UNRM O 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
			UNRM O 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
			IDLE A 1 A_Refire("AltPreHold");
			IDLE A 6 A_WeaponReady;
			Goto Ready;
		
		PreHold:
			IDLE A 6;
			IDLE A 1 A_WeaponOffset(-1.0,40.0);
			IDLE A 0 A_ZoomFactor(0.99);
			IDLE A 1 A_WeaponOffset(-2.0,41.0);
			IDLE A 0 A_ZoomFactor(0.98);
			IDLE A 1 A_WeaponOffset(-3.0,42.0);
			IDLE A 0 A_ZoomFactor(0.97);
			IDLE A 1 A_WeaponOffset(-4.0,43.0);
			IDLE A 0 A_ZoomFactor(0.96);
			IDLE A 1 A_WeaponOffset(-5.0,44.0);
			IDLE A 0 A_ZoomFactor(0.95);
			IDLE A 1 A_WeaponOffset(-6.0,45.0);
			IDLE A 0 A_ZoomFactor(0.94);
			IDLE A 1 A_WeaponOffset(-7.0,46.0);
			IDLE A 0 A_ZoomFactor(0.93);
			IDLE A 1 A_WeaponOffset(-8.0,47.0);
			IDLE A 0 A_ZoomFactor(0.92);
			IDLE A 1 A_WeaponOffset(-9.0,48.0);
			IDLE A 0 A_ZoomFactor(0.91);
			IDLE A 1 A_WeaponOffset(-10.0,49.0);
			IDLE A 0 A_ZoomFactor(0.90);
			IDLE A 1 A_WeaponOffset(-11.0,50.0);
		Hold:
			TNT1 A 0 SetHUDVisibility(2.0);
			IDLE A 1 A_WeaponOffset(-12.0,50.0);
			IDLE A 1 A_WeaponReady(WRF_NOSECONDARY | WRF_NOSWITCH);
			IDLE A 1 A_Refire;
		HoldFinish:
			UNLM A 0 A_TakeInventory("FistStamina", random(12,24));
			UNLM A 0 A_ZoomFactor(1.0, ZOOM_INSTANT);
			UNRM A 0 A_FireProjectile("Alert", 0, 0, 0, 0);
			UNLM A 0 A_StartSound("player/pain3", 0, 1.0, FALSE, ATTN_NONE);
			UNLM B 0;
			UNLM C 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNLM C 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNLM C 0;
			UNLM D 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNLM D 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNLM D 0;
			UNLM E 0;
			UNLM E 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNLM E 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNLM F 0;
			UNLM F 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNLM F 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNLM G 0 A_Quake(7,4,0,1);
			UNLM H 2 A_CustomPunch(random(8,14) * 2, TRUE, CPF_PULLIN, "BulletPuff", 96.0);
			UNLM H 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNLM H 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNLM I 1;
			UNLM J 1;
			UNLM J 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNLM J 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNLM K 1;
			UNLM K 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNLM K 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNLM L 1;
			UNLM L 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNLM L 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNLM M 1;
			UNLM M 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNLM M 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNLM N 1;
			UNLM N 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNLM N 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			IDLE A 6 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
			Goto Ready;
			
		AltPreHold:
			IDLE A 6;
			IDLE A 1 A_WeaponOffset(1.0,40.0);
			IDLE A 0 A_ZoomFactor(0.99);
			IDLE A 1 A_WeaponOffset(2.0,41.0);
			IDLE A 0 A_ZoomFactor(0.98);
			IDLE A 1 A_WeaponOffset(3.0,42.0);
			IDLE A 0 A_ZoomFactor(0.97);
			IDLE A 1 A_WeaponOffset(4.0,43.0);
			IDLE A 0 A_ZoomFactor(0.96);
			IDLE A 1 A_WeaponOffset(5.0,44.0);
			IDLE A 0 A_ZoomFactor(0.95);
			IDLE A 1 A_WeaponOffset(6.0,45.0);
			IDLE A 0 A_ZoomFactor(0.94);
			IDLE A 1 A_WeaponOffset(7.0,46.0);
			IDLE A 0 A_ZoomFactor(0.93);
			IDLE A 1 A_WeaponOffset(8.0,47.0);
			IDLE A 0 A_ZoomFactor(0.92);
			IDLE A 1 A_WeaponOffset(9.0,48.0);
			IDLE A 0 A_ZoomFactor(0.91);
			IDLE A 1 A_WeaponOffset(10.0,49.0);
			IDLE A 0 A_ZoomFactor(0.90);
			IDLE A 1 A_WeaponOffset(11.0,50.0);
		AltHold:
			TNT1 A 0 SetHUDVisibility(2.0);
			IDLE A 1 A_WeaponOffset(12.0,50.0);
			IDLE A 1 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
		AltHoldFinish:
			UNRM A 0 A_TakeInventory("FistStamina", random(14,26));
			UNRM A 0 A_ZoomFactor(1.0, ZOOM_INSTANT);
			UNRM A 0 A_FireProjectile("Alert", 0, 0, 0, 0);
			UNRM A 0 A_StartSound("player/pain3", 0, 1.0, FALSE, ATTN_NONE);
			UNRM B 0;
			UNRM B 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNRM B 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNRM C 0;
			UNRM C 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNRM C 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNRM D 0;
			UNRM D 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNRM D 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNRM E 0;
			UNRM E 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNRM E 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNRM F 0;
			UNRM F 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
			UNRM F 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
			UNRM G 0 A_Quake(7,4,0,1);
			UNRM H 2 A_CustomPunch(random(9,16) * 2, TRUE, CPF_PULLIN, "BulletPuff", 96.0);
			UNRM H 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNRM H 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNRM IJ 1;
			UNRM J 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNRM J 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNRM K 1;
			UNRM K 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNRM K 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNRM L 1;
			UNRM L 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNRM L 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNRM M 1;
			UNRM M 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
			UNRM M 0 A_SetPitch(pitch - 1.0, SPF_INTERPOLATE);
			UNRM N 1;
			IDLE A 1 A_Refire("AltPreHold");
			IDLE A 6 A_WeaponReady(WRF_NOSECONDARY | WRF_NOSWITCH);
			Goto Ready;
	}
}

Class Hammer : REWeapon
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Weapon.Kickback 100;
		AttackSound "fistpunch";
		Obituary "$OB_MPFIST";
		Tag "$TAG_HAMMER";
		Inventory.PickupSound "BEQUIP";
		Inventory.PickupMessage "You found a claw hammer.";
		DamageType "Hammer";
		+WEAPON.MELEEWEAPON;
		+WEAPON.NOALERT;
	}
	
	States
	{
	  Ready:
		HMMR D 1 A_WeaponReady;
		Loop;

	  Deselect:
		HMMR D 1 A_Lower;
		Loop;
		
	  Select:
		HMMR D 1 A_Raise;
		Loop;
		
	  Fire:
		TNT1 A 0 SetHUDVisibility(2.0);
		TNT1 A 0 A_JumpIfInventory("FistStamina", 25, "FastFire");
		HMMR DCB 2;
		HMMR A 1 A_WeaponOffset(2,2,WOF_ADD);
		HMMR A 1 A_WeaponOffset(4,4, WOF_INTERPOLATE);
		HMMR A 1 A_WeaponOffset(6,6, WOF_INTERPOLATE);
		HMMR A 1 A_WeaponOffset(8,8, WOF_INTERPOLATE);
		HMMR A 1 A_WeaponOffset(10,10, WOF_INTERPOLATE);
		HMMR A 1 A_WeaponOffset(12,12, WOF_INTERPOLATE);
		HMMR A 1 A_WeaponOffset(14,14, WOF_INTERPOLATE);
		HMMR BCD 2;
		HMMR D 0 A_TakeInventory("FistStamina", random(4,6));
		HMMR E 1 A_Quake(2,2,0,1);
		HMMR F 1 A_CustomPunch(random(4,8) * 2, TRUE, CPF_PULLIN, "BulletPuff", 96.0);
		HMMR GH 1;
		TNT1 A 4;
		TNT1 A 4 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
		HMMR HGFE 1;
		HMMR D 5;
		HMMR D 1;
		HMMR D 1 A_WeaponReady;
		Goto Ready;
		
	  FastFire:
		TNT1 A 0 SetHUDVisibility(2.0);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR DCB 1;
		HMMR A 1 A_WeaponOffset(2,2);
		HMMR A 3 A_WeaponOffset(40.0,-40.0, WOF_INTERPOLATE);
		HMMR A 0 A_WeaponOffset(0,0, WOF_INTERPOLATE);
		HMMR A 1 A_Refire("PreHold");
		HMMR BCD 0;
		HMMR D 0 A_SetAngle(angle + 2.0, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
		HMMR D 0 A_TakeInventory("FistStamina", random(7,10));
		HMMR D 0 A_SetAngle(angle + 2.0, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
		HMMR D 0 A_Quake(4,4,0,1);
		HMMR D 0 A_CustomPunch(random(10,13) * 2, TRUE, CPF_PULLIN, "BulletPuff", 96.0);
		HMMR E 0;
		HMMR F 0 A_SetAngle(angle + 2.0, SPF_INTERPOLATE);
		HMMR F 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
		HMMR GH 1;
		HMMR H 0 A_SetAngle(angle + 2.0, SPF_INTERPOLATE);
		HMMR H 0 A_SetPitch(pitch + 1.0, SPF_INTERPOLATE);
		TNT1 A 3;
		TNT1 A 2 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
		HMMR HGFE 1;
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 5 A_WeaponReady;
		Goto Ready;
		
	  AltFire:
		TNT1 A 0 SetHUDVisibility(2.0);
		TNT1 A 0 A_JumpIfInventory("FistStamina", 25, "FastAltFire");
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 1;
		HRSW DCB 2;
		HRSW A 4;
		HRSW B 1;
		HRSW A 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch + 0.2, SPF_INTERPOLATE);
		HRSW C 1;
		HRSW A 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch + 0.2, SPF_INTERPOLATE);
		HRSW D 1;
		HRSW A 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch + 0.2, SPF_INTERPOLATE);
		HRSW E 1;
		HRSW A 0 A_SetAngle(angle - 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch + 0.2, SPF_INTERPOLATE);
		HRSW F 1;
		HRSW G 0 A_TakeInventory("FistStamina", random(4,9));
		HRSW G 1 A_Quake(2,2,0,1);
		HRSW H 1 A_CustomPunch(random(4,8) * 2, TRUE, CPF_PULLIN, "BulletPuff", 128.0);
		HRSW IJ 1;
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 1.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.2, SPF_INTERPOLATE);
		TNT1 A 7;
		TNT1 A 1 A_WeaponReady;
		Goto Ready;
		
	  FastAltFire:
		TNT1 A 0 SetHUDVisibility(2.0);
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 1 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 1 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 1 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 1 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 1 A_Refire("AltPreHold");
		HRSW DCB 0;
		HRSW A 3;
		HRSW B 0;
		HRSW A 0 A_SetAngle(angle - 6.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch + 1.5, SPF_INTERPOLATE);
		HRSW C 0;
		HRSW C 0 A_SetAngle(angle - 6.0, SPF_INTERPOLATE);
		HRSW C 0 A_SetPitch(pitch + 1.5, SPF_INTERPOLATE);
		HRSW D 0;
		HRSW D 0 A_SetAngle(angle - 6.0, SPF_INTERPOLATE);
		HRSW D 0 A_SetPitch(pitch + 1.5, SPF_INTERPOLATE);
		HRSW E 0;
		HRSW E 0 A_SetAngle(angle - 6.0, SPF_INTERPOLATE);
		HRSW E 0 A_SetPitch(pitch + 1.5, SPF_INTERPOLATE);
		HRSW F 1;
		HRSW G 0 A_TakeInventory("FistStamina", random(7,13));
		HRSW G 1 A_Quake(4,4,0,1);
		HRSW H 1 A_CustomPunch(random(12,16) * 2, TRUE, CPF_PULLIN, "BulletPuff", 128.0);
		HRSW IJ 0;
		TNT1 A 3;
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HRSW A 0 A_SetAngle(angle + 3.0, SPF_INTERPOLATE);
		HRSW A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		TNT1 A 6 A_WeaponReady;
		Goto Ready;
		
	  AltPreHold:
		HRSW A 1 A_WeaponOffset(-1.0,80.0);
		HRSW A 0 A_ZoomFactor(0.99);
		HRSW A 1 A_WeaponOffset(-2.0,80.0);
		HRSW A 0 A_ZoomFactor(0.98);
		HRSW A 1 A_WeaponOffset(-3.0,80.0);
		HRSW A 0 A_ZoomFactor(0.97);
		HRSW A 1 A_WeaponOffset(-4.0,80.0);
		HRSW A 0 A_ZoomFactor(0.96);
		HRSW A 1 A_WeaponOffset(-5.0,80.0);
		HRSW A 0 A_ZoomFactor(0.95);
		HRSW A 1 A_WeaponOffset(-6.0,80.0);
		HRSW A 0 A_ZoomFactor(0.94);
		HRSW A 1 A_WeaponOffset(-7.0,80.0);
		HRSW A 0 A_ZoomFactor(0.93);
		HRSW A 1 A_WeaponOffset(-8.0,80.0);
		HRSW A 0 A_ZoomFactor(0.92);
		HRSW A 1 A_WeaponOffset(-9.0,80.0);
		HRSW A 0 A_ZoomFactor(0.91);
		HRSW A 1 A_WeaponOffset(-10.0,80.0);
		HRSW A 0 A_ZoomFactor(0.90);
		HRSW A 1 A_WeaponOffset(-11.0,80.0);
	  AltHold:
		TNT1 A 0 SetHUDVisibility(2.0);
		HRSW A 1 A_WeaponOffset(-12.0,80.0);
		HRSW A 1 A_WeaponReady(WRF_NOPRIMARY | WRF_NOSWITCH);
	  AltHoldFinish:
		TNT1 A 0 A_ClearRefire;
		HRSW A 0 A_ZoomFactor(1.0, ZOOM_INSTANT);
		HRSW BC 1;
		HRSW DEF 0;
		HRSW G 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HRSW G 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HRSW G 0 A_TakeInventory("FistStamina", random(16,30));
		HRSW G 0 A_FireCustomMissile("Alert", 0, 0, 0, 0);
		HRSW G 0 A_PlaySound("player/pain3", 0, 1.0, FALSE, ATTN_NONE);
		HRSW G 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HRSW G 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HRSW G 0 A_Quake(7,4,0,1);
		HRSW H 0 A_CustomPunch(random(16,21) * 2, TRUE, CPF_PULLIN, "BulletPuff", 128.0);
		HRSW I 0;
		HRSW I 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HRSW I 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HRSW J 1;
		HRSW J 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HRSW J 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		TNT1 A 5;
		TNT1 A 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		TNT1 A 8 A_WeaponReady;
		Goto Ready;
		
	  PreHold:
		HMMR A 1 A_WeaponOffset(40.0,-40.0);
		HMMR A 0 A_ZoomFactor(0.99);
		HMMR A 1 A_WeaponOffset(41.0,-41.0);
		HMMR A 0 A_ZoomFactor(0.98);
		HMMR A 1 A_WeaponOffset(42.0,-42.0);
		HMMR A 0 A_ZoomFactor(0.97);
		HMMR A 1 A_WeaponOffset(43.0,-43.0);
		HMMR A 0 A_ZoomFactor(0.96);
		HMMR A 1 A_WeaponOffset(44.0,-44.0);
		HMMR A 0 A_ZoomFactor(0.95);
		HMMR A 1 A_WeaponOffset(45.0,-45.0);
		HMMR A 0 A_ZoomFactor(0.94);
		HMMR A 1 A_WeaponOffset(46.0,-46.0);
		HMMR A 0 A_ZoomFactor(0.93);
		HMMR A 1 A_WeaponOffset(47.0,-47.0);
		HMMR A 0 A_ZoomFactor(0.92);
		HMMR A 1 A_WeaponOffset(48.0,-48.0);
		HMMR A 0 A_ZoomFactor(0.91);
		HMMR A 1 A_WeaponOffset(49.0,-49.0);
		HMMR A 0 A_ZoomFactor(0.90);
		HMMR A 1 A_WeaponOffset(50.0,-50.0);
	  Hold:
		TNT1 A 0 SetHUDVisibility(2.0);
		HMMR A 1 A_WeaponOffset(50.0,-50.0);
		HMMR A 1 A_WeaponReady;
		HMMR A 1 A_Refire;
	  HoldFinish:
		TNT1 A 0 A_ClearRefire;
		HMMR A 0 A_ZoomFactor(1.0, ZOOM_INSTANT);
		HMMR A 0 A_WeaponOffset(0,0, WOF_INTERPOLATE);
		HMMR BCD 0;
		HMMR D 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HMMR D 0 A_TakeInventory("FistStamina", random(16,30));
		HMMR D 0 A_FireCustomMissile("Alert", 0, 0, 0, 0);
		HMMR D 0 A_PlaySound("player/pain3", 0, 1.0, FALSE, ATTN_NONE);
		HMMR D 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HMMR D 0 A_Quake(7,4,0,1);
		HMMR D 0 A_CustomPunch(random(15,20) * 2, TRUE, CPF_PULLIN, "BulletPuff", 128.0);
		HMMR E 0;
		HMMR F 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HMMR F 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		HMMR GH 1;
		HMMR H 0 A_SetAngle(angle + 4.0, SPF_INTERPOLATE);
		HMMR H 0 A_SetPitch(pitch + 3.0, SPF_INTERPOLATE);
		TNT1 A 5;
		HMMR HGFE 1;
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetAngle(angle - 0.5, SPF_INTERPOLATE);
		HMMR D 0 A_SetPitch(pitch - 0.5, SPF_INTERPOLATE);
		HMMR D 8 A_WeaponReady;
		Goto Ready;
		
	  Spawn:
		CHAM A -1;
		Stop;
	 }
}

Class BerettaM9 : REWeapon
{
	Default
	{
		//$Category weapons
		Weapon.SelectionOrder 1000;
		Weapon.AmmoType "BM9Clip";
		Weapon.AmmoGive 15;
		Weapon.AmmoUse	1;
		Weapon.AmmoUse1	1;
		Weapon.AmmoType2 "BM9Ammo";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 0; //45
		Weapon.SlotNumber 2;
		AttackSound "sounds/weapons/beretta/";
		Inventory.Pickupmessage "You got the Beretta M9.";
		Weapon.BobStyle "Alpha";
		Weapon.BobSpeed 1.2;
		Scale 0.15;
		+Weapon.AMMO_OPTIONAL;
		+Weapon.NOAUTOFIRE;
		+NOEXTREMEDEATH;
		-DROPPED;
		+Inventory.IGNORESKILL;
	}
 
	States
	{
		PreReady:
		 BRTT A 6;
		 BRTT A 1 A_ClearOverlays(2, 3, 1);
		 
		Ready:
		 BRTT A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		 TNT1 A 0 A_SetCrosshair(1);
		 Loop;
		 
		AltReady:
		  BRTT A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		  Loop;
		  
		Deselect:
		 BRTT A 1 A_PlaySound("BUNEQUIP",1,1);
		 TNT1 A 0 A_TakeInventory("BM9SteadyUp", 1);
		DeselectLoop:
		 BRTT A 1 A_Lower;
		 Goto DeselectLoop;
		Select:
		 BRTT A 1 A_PlaySound("BEQUIP",1,1);
		 BRTT A 1 A_Raise;
		 Goto Select+1;
		  
		Fire:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 TNT1 A 0 A_JumpIfInventory("BM9SteadyUp", 1, "SteadyFire");
		 BRTT A 0 A_JumpIfNoAmmo("DryFire");
		 BRTT B 1 A_PlaySound("BERRSHOT",1,1); //BSHOTC
		 BRTT C 1 A_Quake(2,4,0,2);
		 BRTT E 0 Bright A_GunFlash;
		 BRTT E 0 A_SetPitch(pitch + (random(2,4)));
		 BRTT E 0 A_SetPitch(pitch -(random(2,5)));
		 BRTT E 1 A_FireCustomMissile("BerettaSmokeSpawn",0,0,6,8);
		 BRTT F 1 A_FireBullets(4,5,-1,6,"BulletPuff",1);
		 BRTT G 0 A_SpawnDebris("NineMMDebris");
		 BRTT GHIJKLGO 1 A_WeaponReady;
		 Goto Ready;
		  
		SteadyFire:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 BRTT A 0 A_JumpIfNoAmmo("DryFire");
		 BRTT B 1 A_PlaySound("BERRSHOT",1,1); //BSHOTC
		 BRTT C 1 A_Quake(2,1,0,1);
		 BRTT E 0 Bright A_GunFlash;
		 BRTT E 0 A_SetPitch(pitch+(random(1,2)));
		 BRTT E 0 A_SetPitch(pitch-(random(1,2)));
		 BRTT E 1 Bright A_FireCustomMissile("BerettaSmokeSpawn",0,0,6,8);
		 BRTT F 1 Bright A_FireBullets(1,1,-1,random(6,8),"BulletPuff",1);
		 BRTT F 0 A_SpawnDebris("NineMMDebris");
		 BRTT G 1 A_OverlayOffset(2,0,2,WOF_INTERPOLATE);
		 BRTT H 1 A_OverlayOffset(2,0,6,WOF_INTERPOLATE);
		 BRTT I 1 A_OverlayOffset(2,0,12,WOF_INTERPOLATE);
		 BRTT J 1 A_OverlayOffset(2,0,6,WOF_INTERPOLATE);
		 BRTT K 1 A_OverlayOffset(2,0,2,WOF_INTERPOLATE);
		 BRTT LG 1;
		 BRTT O 1 A_WeaponReady;
		 Goto AltReady;
		 
		AFireOverlay:
		 BHND ABCDEFG 1;
		AFireOverlayStop:
		 BHND G 1;
		 Loop;
		AFireOverlayLower:
		 BRTT A 1 A_Overlay(3, "AFireOverlayLowerAnim", TRUE);
		 BRTT A 1 A_OverlayFlags(3, PSPF_ADDWEAPON, 1);
		 BRTT A 1 A_ClearOverlays(2, 2, 1);
		 BRTT A 0 A_ZoomFactor(1.00);
		 TNT1 A 0 A_SetCrosshair(1);
		 TNT1 A 0 A_TakeInventory("BM9SteadyUp", 1);
		 Goto PreReady;
		 
		AFireOverlayLowerAnim:
		 BHND GFEDCBA 1;
		AFireOverlayLowerAnimStop:
		 TNT1 A 1;
		 Loop;
		 
		AltFire:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 TNT1 A 0 A_JumpIfInventory("BM9SteadyUp", 1, "AFireOverlayLower");
		 TNT1 A 0 A_GiveInventory("BM9SteadyUp", 1);
		 BRTT A 1 A_Overlay(2, "AFireOverlay", TRUE);
		 BRTT A 1 A_OverlayFlags(2, PSPF_ADDWEAPON, 1);
		 BRTT A 0 A_ZoomFactor(1.10, ZOOM_NOSCALETURNING);
		 TNT1 A 0 A_SetCrosshair(3);
		 Goto AltReady;
		 
		DryFire:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 BRTT A 1 Offset(1,30) A_PlaySound("DRYFIRE",1,1);
		 BRTT B 1 Offset(1,31);
		 BRTT C 1 Offset(1,32);
		 BRTT D 1 Offset(1,33);
		 BRTT E 3;
		 Goto Ready;
		 
		Reload:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 TNT1 A 0 A_JumpIfInventory("BM9SteadyUp", 1, "SteadyReload");
		 BRTT A 0 A_JumpIfInventory("BM9Clip",15,2); //Do nothing if full mag capacity
		 BRTT A 0 A_JumpIfInventory("BM9Ammo",1,"ReloadWork"); //Go to ReloadWork state if not full
		 BRTT A 1;
		 Goto Ready;
		
		SteadyReload:
		 TNT1 A 0 SetHUDVisibility(2.0);
		 BRTT A 0 A_JumpIfInventory("BM9Clip",15,2); //Do nothing if full mag capacity
		 BRTT A 0 A_JumpIfInventory("BM9Ammo",1,"SteadyReloadWork"); //Go to ReloadWork state if not full
		 BRTT A 1;
		 Goto AltReady;
		 
		ReloadWork:
		 BRTT A 1 Offset(1,20) A_PlaySound("BEJECT",1,1); //Need to add reload animation frames
		 BTTR A 1 Offset(2,21);
		 BTTR B 1 Offset(3,22);
		 BTTR C 1 Offset(4,23);
		 BTTR D 1 Offset(5,24);
		 BTTR E 2 Offset(6,25);
		 BTTR F 2 Offset(6,25);
		 BTTR G 6 Offset(6,25);
		ReloadLoop: //WildWeasel's Reload Loop Tutorial
		 TNT1 A 0 A_JumpIfInventory("BM9Clip", 15, "ReloadFinish"); //Finish if gun is full
		 TNT1 A 0 A_TakeInventory("BM9Ammo", 1); //Take 1 from reserve
		 TNT1 A 0 A_GiveInventory("BM9Clip", 1); //Give one back to gun
		 TNT1 A 0 A_JumpIfInventory("BM9Ammo", 1, "ReloadLoop"); //If gun isn't full, give another bullet
		 Goto ReloadFinish; // And if it's not full but there's no reserve ammo, finish up anyway.
		SteadyReloadWork:
		 BRTT A 1 A_Overlay(3, "AFireOverlayLowerAnim", TRUE);
		 BRTT A 1 A_OverlayFlags(3, PSPF_ADDWEAPON, 1);
		 BRTT A 1 A_ClearOverlays(2, 2, 1);
		 BRTT A 1 Offset(1,20) A_PlaySound("BEJECT",1,1); //Need to add reload animation frames
		 BTTR A 1 Offset(2,21);
		 BTTR B 1 Offset(3,22);
		 BTTR C 1 Offset(4,23);
		 BTTR D 1 Offset(5,24);
		 BTTR E 2 Offset(6,25);
		 BTTR F 2 Offset(6,25);
		 BTTR G 6 Offset(6,25);
		SteadyReloadLoop: //WildWeasel's Reload Loop Tutorial
		 TNT1 A 0 A_JumpIfInventory("BM9Clip", 15, "SteadyFinish"); //Finish if gun is full
		 TNT1 A 0 A_TakeInventory("BM9Ammo", 1); //Take 1 from reserve
		 TNT1 A 0 A_GiveInventory("BM9Clip", 1); //Give one back to gun
		 TNT1 A 0 A_JumpIfInventory("BM9Ammo", 1, "SteadyReloadLoop"); //If gun isn't full, give another bullet
		 Goto SteadyFinish; // And if it's not full but there's no reserve ammo, finish up anyway.
		 
		ReloadFinish:
		 BTTR G 6 Offset(6,25) A_PlaySound("BINSERT",1,1);
		 BTTR H 2 Offset(6,25);
		 BTTR I 2 Offset(5,24);
		 BTTR J 2 Offset(4,23);
		 BTTR K 10 Offset(3,22);
		 BTTR L 1 Offset(3,22) A_PlaySound("BERETTAC",1,1);
		 BTTR M 10 Offset(3,22);
		 BTTR N 1 Offset(2,21);
		 BTTR A 1 Offset(1,20);
		 BRTT A 1 Offset(1,20);
		 Goto Ready;
		
		SteadyFinish:
		 BTTR G 6 Offset(6,25) A_PlaySound("BINSERT",1,1);
		 BTTR H 2 Offset(6,25);
		 BTTR I 2 Offset(5,24);
		 BTTR J 2 Offset(4,23);
		 BTTR K 10 Offset(3,22);
		 BTTR L 1 Offset(3,22) A_PlaySound("BERETTAC",1,1);
		 BTTR M 10 Offset(3,22);
		 BTTR N 1 Offset(2,21);
		 BTTR A 1 A_Overlay(2, "AFireOverlay", 1);
		 BTTR A 1 A_OverlayFlags(2, PSPF_ADDWEAPON, 1);
		 BRTT A 1 A_ClearOverlays(3, 3, 1);
		 BTTR A 1 Offset(1,20);
		 BRTT A 1 Offset(1,20);
		 Goto AltReady;
		 
		Flash:
		 BRTT M 1 Bright A_Light(20);
		 BRTT N 1 Bright A_Light(10);
		 Goto LightDone;
		
		Spawn:
		 BTTA Z -1;
		 Stop;
	}
}

Class BerettaDummy : CustomInventory
{
	Default
	{
		Inventory.PickupSound "SGPUMP";
		Inventory.PickupMessage "";
		Scale 0.15;
	}
	
    States
    {
    
	Spawn:
        BTTA Z -1;
        Stop;

    Pickup:
        // If you have a beretta, go to HaveBeretta state, and give a full mag.
        // If not, give beretta.
        TNT1 A 0 A_JumpIfInventory("BerettaM9", 1, "HaveBeretta");
        TNT1 A 0 A_GiveInventory("BerettaM9");
		TNT1 A 0 A_Log("\cGYou Got the Beretta M9.");
        Stop;

    HaveBeretta:
        TNT1 A 0 A_GiveInventory("BM9Clip", 15);
		TNT1 A 0 A_Log("\cGYou empty the Beretta.");
        Stop;
    }
} 

Class BM9Ammo : Ammo replaces Clip
{
	Default
	{
		//$Category ammunition
		Inventory.MaxAmount 255;
		Inventory.PickupMessage "9mm pistol ammo";
		Inventory.Amount 15;
		Inventory.PickupSound "BERETTAC";
		Inventory.Icon "Mag1";
		Ammo.BackpackAmount 30;
		Ammo.BackpackMaxAmount 255;
		Ammo.DropAmount 15;
		Scale 0.50;
		-DROPPED;
		+Inventory.IGNORESKILL;;
	}
	
	States
	{
		Spawn:
	    	BRTM A -1;
	    	Stop;
	}
}

Class BM9Clip : Ammo
{
	Default
	{
		Inventory.MaxAmount 15;
		Inventory.Icon "Mag1";
		-DROPPED;
		+Inventory.IGNORESKILL;;
	}
}

Class BM9AmmoBox : BM9Ammo replaces ClipBox
{
	Default
	{
		Inventory.PickupMessage "A box of Beretta M9 ammo.";
		Inventory.Amount 50;
	}
	
    States
    {
      Spawn:
		AMMO A -1;
		Stop;
	}
}

Class NineMMDebris: Actor
{
	Default
	{
		Health 1;
		Scale 0.3;
		Radius 1;
		Height 1;
		AttackSound "sounds/weapons/beretta/";
		+FORCEYBILLBOARD;
		+DOOMBOUNCE;
		+DONTSPLASH;
		-SOLID;
	}
	
	States
	{
		Spawn:
			TNT1 A 1;
			BTTA Y 1;
			BTTA Y 1 A_PlaySound("9MMSH",1,1);
			BTTA Y -1;
			Stop;
	}
}

Class BerettaSmokeSpawn : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		Speed 30;
		PROJECTILE;
	}
	
    States
    {
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Die;
			Goto Death;
		Death:
			TNT1 A 0 A_SpawnProjectile("BerettaSmoke",-6,-4,0);
			Stop;
    }
}

Class BerettaSmoke : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		RenderStyle "Add";
		Alpha 0.6;
		Scale 0.05;
		+NOGRAVITY;
		+NOBLOCKMAP;
		+FLOORCLIP;
	}
	
	States
	{
		Spawn:
			SMOK ABCDEFGHIJKLMNOPQ 1;
			Stop;
	}
}

Class BenelliM3S : REWeapon replaces Shotgun
{
	Default
	{
		//$Category weapons
		Scale 0.28;
		Weapon.SelectionOrder 1000;
		Weapon.AmmoType "ShotClip";
		Weapon.AmmoGive 6;
		Weapon.AmmoUse 1;
		Weapon.AmmoType2 "ShotShell";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 6;
		Weapon.SlotNumber 3;
		Weapon.BobStyle "Alpha";
		AttackSound "sounds/weapons/benellim3s/";
		Inventory.Pickupmessage "";
		Inventory.Amount 1;
		Inventory.MaxAmount 1;
		+Weapon.AMMO_OPTIONAL;
		+Weapon.NOAUTOFIRE;
		+NOEXTREMEDEATH;
		+Inventory.IGNORESKILL;;
	}
	
	States
	{
		Ready:
			BENE A 1 A_WeaponReady(WRF_ALLOWRELOAD);
			TNT1 A 0 A_SetCrosshair(2);
			Loop;
			
		Deselect:
			BENE A 1 A_PlaySound("BUNEQUIP",1,1);
		DeselectLoop:
			BENE A 1 A_Lower;
			Goto DeselectLoop;
		 
		Select:
			BENE A 1 A_PlaySound("BEQUIP",1,1);
			BENE A 1 A_Raise;
			Goto Select+1;
		 
		Fire:
			TNT1 A 0 SetHUDVisibility(2.0);
			BENE A 0 A_JumpIfNoAmmo("DryFire");
			BENE A 1 A_PlaySound("SGSHOT1",CHAN_WEAPON,1);
			BENE B 0 A_SetPitch(pitch+(random(1,4)));
			BENE B 0 A_SetPitch(pitch-(random(1,6)));
			BENE B 0 A_Recoil(1.0);
			BENE B 0 A_GunFlash;
			BENE B 0 A_Quake(3,6,0,6); //1
			BENE C 0 A_FireBullets(7,3,6,7,"BulletPuff",1); //1
			BENE D 0; //1
			BENE D 0 A_SpawnDebris("TwelveGDebris");
			BENE D 0 A_SetPitch(pitch+0.25);
			BENE D 0 A_SetPitch(pitch+0.25);
			BENE E 1 A_FireCustomMissile("BenelliSmokeSpawn",0,0,6,8);
			BENE F 1;
			BENE GHIJK 1;
			BENE L 6;
			BENE A 1 A_WeaponReady;
			Goto Ready;
		 
		DryFire:
			TNT1 A 0 SetHUDVisibility(2.0);
			BENE A 1 Offset(1,30) A_PlaySound("DRYFIRE",1,1);
			BENE B 1 Offset(1,31);
			BENE B 1 Offset(1,32);
			BENE B 1 Offset(1,33);
			BENE A 3;
			Goto Ready;
		 
		Reload:
			TNT1 A 0 SetHUDVisibility(2.0);
			TNT1 A 0 A_JumpIfInventory("ShotClip",6,2); //Do nothing if full mag capacity
			TNT1 A 0 A_JumpIfInventory("ShotShell",1,2);
			BENE A 1;
			Goto Ready;
			
			BENR B 1 Offset(1,30) A_PlaySound("COCK",0,1);
			BENR C 1 Offset(2,31);
			BENR D 1 Offset(3,32);
			BENR E 1 Offset(4,33);
			BENR F 4 Offset(5,34);
			Goto ReloadWork;
			
		ReloadWork:
			TNT1 A 0 SetHUDVisibility(2.0);
			BENR F 0 A_TakeInventory("ShotShell",1);
			BENR F 0 A_GiveInventory("ShotClip",1);
			BENR GHIJKL 1 Offset(5,34);
			BENR M 2 Offset(4,35);
			BENR N 2 Offset(2,36);
			BENR O 4 Offset(0,37) A_PlaySound("INSERT",1,1);
			BENR P 2 Offset(2,36);
			BENR Q 2 Offset(4,35);
			BENR R 1 Offset(5,34);
			BENR STUV 1 Offset(5,34);
			BENR FFFF 1 A_WeaponReady;
			TNT1 A 0 A_JumpIfInventory("ShotClip",6,"ReloadFinish");
			TNT1 A 0 A_JumpIfInventory("ShotShell",1,"ReloadWork");
		ReloadFinish:
			BENR F 1 Offset(5,34) A_PlaySound("UNCOCK",0,1);
			BENR E 1 Offset(4,33);
			BENR D 1 Offset(3,32);
			BENR C 1 Offset(2,31);
			BENR B 1 Offset(1,30);
			Goto Ready;
		
		Flash:
			BENF M 1 Bright A_Light(20);
			BENF N 1 Bright A_Light(10);
			Goto LightDone;
			
		Spawn:
		 BENE Z -1;
		 Stop;
	}
}

Class ShotShell : Ammo replaces Shell
{
	Default
	{
		//$Category ammunition
		Inventory.MaxAmount 150;
		Inventory.PickupMessage "You got some 12 gauge shells";
		Inventory.Amount 4;
		Inventory.PickupSound "SGPUMP";
		Inventory.Icon "Shell1";
		Ammo.DropAmount 4;
		Ammo.BackpackAmount 24;
		Ammo.BackpackMaxAmount 150;
		Scale 0.75;
		-DROPPED;
		+Inventory.IGNORESKILL;;
	}
	
	States
	{
		Spawn:
	    	SHEL A -1;
	    	Stop;
	}
}

Class ShotClip : Ammo
{
	Default
	{
		Inventory.MaxAmount 6;
		Inventory.Icon "Shell1";
		-DROPPED;
		+Inventory.IGNORESKILL;;
	}
}

Class ShotShellBox : ShotShell replaces ShellBox
{
	Default
	{
		Inventory.PickupMessage "You got a box of 12 gauge shells.";
		Inventory.Amount 12;
		-DROPPED;
		-Inventory.IGNORESKILL;
	}
	
    States
    {
		Spawn:
			SBOX A -1;
			Stop;
	}
}

Class TwelveGDebris : Actor
{
	Default
	{
		Health 1;
		Scale 0.3;
		Radius 1;
		Height 1;
		AttackSound "sounds/weapons/benellim3s/";
		+FORCEYBILLBOARD;
		+DOOMBOUNCE;
		+DONTSPLASH;
		-SOLID;
	}
	
	States
	{
		Spawn:
			TNT1 A 1;
			BRS5 ABCDEFGHIJKL 1;
			BRS5 M 1 A_PlaySound("12GSH",1,1);
			BRS5 NOPQRST 1;
			BRS5 I -1;
			Stop;
	}
}

Class BenelliSmokeSpawn : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		Speed 30;
		PROJECTILE;
	}
	
    States
    {
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Die;
			Goto Death;
		Death:
			TNT1 A 0 A_SpawnProjectile("BenelliSmoke",-6,4,0);
			Stop;
    }
}

Class BenelliSmoke : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		RenderStyle "Add";
		Alpha 0.6;
		Scale 0.10;
		+NOGRAVITY;
		+NOBLOCKMAP;
		+FLOORCLIP;
	}
	
	States
	{
		Spawn:
			SMOK ABCDEFGHIJKLMNOPQ 1;
			Stop;
	}
}

Class BenelliDummy : CustomInventory
{
	Default
	{
		Inventory.PickupSound "SGPUMP";
		Inventory.PickupMessage "";
		Scale 0.28;
	}

    States
    {
		Spawn:
			BENE Z -1;
			Stop;

		Pickup:
			// If you have a shotgun, go to HaveShotgun state, and give four shells.
			// If not, give shotgun.
			TNT1 A 0 A_JumpIfInventory("BenelliM3S", 1, "HaveShotgun");
			TNT1 A 0 A_GiveInventory("BenelliM3S");
			TNT1 A 0 A_Log("\cGYou Got the Benelli M3S.");
			Stop;

		HaveShotgun:
			TNT1 A 0 A_GiveInventory("ShotShell", 4);
			TNT1 A 0 A_Log("\cGYou empty the Benelli M3S.");
			Stop;
    }
} 

// Half-Life Flashlight
// DECORATE

Class Flashlight2 : Inventory
{
	Default
	{
		Inventory.MaxAmount 1;
		+Inventory.IgnoreSkill;
		Inventory.PickupMessage "You got a flashlight.";
	}
	
	States
	{
		Spawn:
			FSH1 A -1;
			Stop;
	}
}

Class FlashlightSwitch : Inventory
{
	Default
	{
		Inventory.MaxAmount 1;
		+Inventory.IgnoreSkill;
	}
}


Class Alert : Actor
{
	Default
	{
		Height 1;
		Radius 1;
		Speed 255;
		Damage 0;
		ExplosionRadius 0;
		ExplosionDamage 0;
		PROJECTILE;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_AlertMonsters;
			Goto Death;
   
		Death:
			TNT1 A 0;
			Stop;
	}
}